************************************************************************************************************************************************************************************************************
# Enter your height in meters e.g., 1.55
height = float(input())
# Enter your weight in kilograms e.g., 72
weight = int(input())

BMI = weight / (height ** 2)

if BMI < 18.5:
 print(f"Your BMI is {BMI}, you are underweight.")
elif BMI < 25: 
 print(f"Your BMI is {BMI}, you have a normal weight.")
elif BMI < 30: 
 print(f"Your BMI is {BMI}, you are slightly overweight.")
elif BMI < 35: 
 print(f"Your BMI is {BMI}, you are obese.")
else: print(f"Your BMI is {BMI}, you are clinically obese.")
************************************************************************************************************************************************************************************************************
Even or Odd Calculator

# Which number do you want to check?
number = int(input())

# If the number can be divided by 2 with 0 remainder.
if number % 2 == 0:
  print("This is an even number.")
# Otherwise (number cannot be divided by 2 with 0 remainder).
else:
  print("This is an odd number.")
************************************************************************************************************************************************************************************************************
This is a Tip calculator

print("Welcome to the tip calculator")

Total = float(input("What was the total of the bill? $" ))

Split = int(input("How many people are going to split the bill?"))


Tip = int(input("What percentage would you like to tip? 10, 12 or 15%? "))

Tipcalc = Tip * Total / 100

NewTot = Total + Tipcalc

print(f"Each person should pay: $ {NewTot/Split}")

************************************************************************************************************************************************************************************************************
Leap Year checker
# Which year do you want to check?
year = int(input())

if year % 4 ==0 and (year % 100 != 0 or year % 400 == 0):
  print("Leap year")
else: print("Not leap year")
************************************************************************************************************************************************************************************************************
This code takes in coordinates and replaces the element in the matrix at the specified location with an X
line1 = ["⬜️","️⬜️","️⬜️"]
line2 = ["⬜️","⬜️","️⬜️"]
line3 = ["⬜️️","⬜️️","⬜️️"]
map = [line1, line2, line3]
print("Hiding your treasure! X marks the spot.")
position = input() # Where do you want to put the treasure?


letter = position[0].lower()
num = int(position[1]) - 1

abc = ["a","b","c"]
letter_indx = abc.index(letter)
map[num][letter_indx] = "X"

print(f"{line1}\n{line2}\n{line3}")
************************************************************************************************************************************************************************************************************
This code takes heights from an input and outputs total and other information
# Input a Python list of student heights
student_heights = input().split()
for n in range(0, len(student_heights)):
  student_heights[n] = int(student_heights[n])
# 🚨 Don't change the code above 👆
  
# Write your code below this row 👇
total = 0
 
# creating a list
 
# Iterate each element in list
# and add them in variable total
for ele in range(0, len(student_heights)):
    total = total + student_heights[ele]
 
# printing total value
print(f"total height = {total}")

num = len(student_heights)

print(f"number of students = {num}")

Var = total/num
print(f"average height = {round(Var)}")
************************************************************************************************************************************************************************************************************
This code sums all even numbers in input
target = int(input()) # Number between 0 and 1000
even_sum = 0
for number in range(2, target + 1, 2):
  even_sum += number
print(even_sum)

# or

# alternative_sum = 0
# for number in range(1, target + 1):
#   if number % 2 == 0:
#     alternative_sum += number
# print(alternative_sum)
************************************************************************************************************************************************************************************************************
FizzBuzz Game!
target = 100
for number in range(1, target + 1):
  if number % 3 == 0 and number % 5 == 0:
    print("FizzBuzz")
  elif number % 3 == 0:
    print("Fizz")
  elif number % 5 == 0:
    print("Buzz")
  else:
    print(number)
************************************************************************************************************************************************************************************************************
Password generator
import random

letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y','z']

numbers = ['1','2' ,'3' ,'4' ,'5' ,'6' ,'7' ,'8' ,'9','0']
symbols = ['!','@','#','$','%','^','&','*','(',')','_','+',':','?','/','.']
Omega = [letters, numbers, symbols]
print("Welcome to the PyPassword Generator!")
nr_letters= int(input("How many letters would you like in your password?\n"))
nr_symbols = int(input("How many symbols would you like?\n"))
nr_numbers = int(input("How many numbers would you like?\n"))

password = []

# Add random letters to the password
for _ in range(nr_letters):
    password.append(random.choice(letters))

# Add random symbols to the password
for _ in range(nr_symbols):
    password.append(random.choice(symbols))

# Add random numbers to the password
for _ in range(nr_numbers):
    password.append(random.choice(numbers))
#Eazy Level - Order not randomised:
random.shuffle(password)

# Convert the password list to a string
generated_password = ''.join(password)

print(f"Your generated password is: {generated_password}")
************************************************************************************************************************************************************************************************************
Hangman Game

import random


HANGMANPICS = ['''
  +---+
  |   |
      |
      |
      |
      |
=========''', '''
  +---+
  |   |
  O   |
      |
      |
      |
=========''', '''
  +---+
  |   |
  O   |
  |   |
      |
      |
=========''', '''
  +---+
  |   |
  O   |
 /|   |
      |
      |
=========''', '''
  +---+
  |   |
  O   |
 /|\  |
      |
      |
=========''', '''
  +---+
  |   |
  O   |
 /|\  |
 /    |
      |
=========''', '''
  +---+
  |   |
  O   |
 /|\  |
 / \  |
      |
=========''']


word_list = ["aardvark", "baboon", "camel"]

# pick a random element from a list of strings.
chosen_word = random.choice(word_list)

display_word = "_" * len(chosen_word)

print(display_word)

max_attempts = len(HANGMANPICS) - 1
mob = 1
print(HANGMANPICS[0])

while max_attempts > 0:
  guess = input("Guess a letter: ").lower()
  if guess in chosen_word:
    print("Correct!")
    display_word = "".join([letter if letter == guess or display_letter != "_" else "_" for letter, display_letter in zip(chosen_word, display_word)])
    print(display_word)
  else:
    print("incorrect")
    print(HANGMANPICS[mob])
    mob += 1
    max_attempts -= 1
  if chosen_word == display_word:
    print("Congratuations! You win!")
    break

************************************************************************************************************************************************************************************************************
Prime Number calculator : Using a defined function  

def prime_checker(number):
    hold = 2
    count = 0
    while hold <= n: 
        for num in range(1,number + 1):
           if number % num == 0:
               count += 1
  
        if count == 2:
          print("It's a prime number.")
          
        else:
          print("It's not a prime number.")
          
        break
# when a number in the range is a divisor of input number 1 is added to count, if count = 2 then it must be prime 
#print results 

    

n = int(input()) # Check this number
prime_checker(number=n)
